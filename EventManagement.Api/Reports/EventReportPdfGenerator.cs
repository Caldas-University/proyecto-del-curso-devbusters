using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using EventManagement.Application.DTO;

namespace EventManagement.Api.Reports;

public class EventReportPdfGenerator
{
    public static byte[] Generate(List<EventReportDto> reports, ReportSummaryDto summary)
    {
        return Document.Create(container =>
        {
            container.Page(page =>
            {
                page.Margin(40);

                page.Header().Element(container =>
{
    container.AlignCenter().PaddingBottom(10).Text("Event Report Summary")
        .SemiBold().FontSize(20).FontColor(Colors.Blue.Medium);
});

                page.Content().Column(col =>
                {
                    col.Spacing(10);

                    // Métricas
                    col.Item().Text($"Total Reports: {summary.TotalReports}");
                    col.Item().Text($"Average Attendance: {summary.AverageAttendance:F2}");
                    col.Item().Text($"Average Occupancy: {summary.AverageOccupancy:P2}");
                    col.Item().Text($"Average Schedule Compliance: {summary.AverageScheduleCompliance:P2}");

                    col.Item().PaddingVertical(15).LineHorizontal(0.5f).LineColor(Colors.Grey.Lighten2);

                    // Título tabla
                    col.Item().Element(container =>
{
    container.PaddingBottom(5).Text("Detailed Records")
        .Bold().FontSize(14);
});

                    // Tabla
                    col.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn(2); // Event ID
                            columns.RelativeColumn(2); // Activity Type
                            columns.RelativeColumn(1); // Attendance
                            columns.RelativeColumn(1); // Compliance
                        });

                        // Encabezado tabla
                        table.Header(header =>
                        {
                            header.Cell().Element(CellStyle).Text("Event ID").Bold();
                            header.Cell().Element(CellStyle).Text("Activity Type").Bold();
                            header.Cell().Element(CellStyle).Text("Attendance").Bold();
                            header.Cell().Element(CellStyle).Text("Compliance").Bold();
                        });

                        // Filas tabla
                        foreach (var r in reports)
                        {
                            table.Cell().Element(CellStyle).Text(r.Id.ToString());
                            table.Cell().Element(CellStyle).Text(r.ActivityType);
                            table.Cell().Element(CellStyle).Text(r.AttendanceCount.ToString());
                            table.Cell().Element(CellStyle).Text($"{r.ScheduleCompliance:P0}");
                        }

                        static IContainer CellStyle(IContainer container)
                        {
                            return container
                                .BorderBottom(0.5f)
                                .BorderColor(Colors.Grey.Lighten2)
                                .PaddingVertical(3)
                                .PaddingHorizontal(2);
                        }
                    });
                });

                // Footer
                page.Footer().AlignCenter().Text(txt =>
                {
                    txt.Span("Generated by AgilUC – ");
                    txt.Span(DateTime.Now.ToString("g")).FontSize(10);
                });
            });
        }).GeneratePdf();
    }
}